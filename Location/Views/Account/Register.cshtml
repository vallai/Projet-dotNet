@model Location.Models.RegisterViewModel
@{
    ViewBag.Title = "S’inscrire";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Créer un nouveau compte.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(m => m.prenom, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.prenom, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.nom, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.nom, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ville, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.ville, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    <input type="submit" class="btn btn-default" value="Inscription" />
                </div>
            </div>
        </div>
        <div class="col-md-3"></div>
    </div>

}

@Scripts.Render("~/bundles/autocomplete")
<script>
   
    var villes = new Bloodhound({
        datumTokenizer: function (datum) {
            return Bloodhound.tokenizers.whitespace(datum.value);
        },
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        remote: {
            url: '@Url.Action("Villes", "Ville")?recherche=%QUERY',
            filter: function (villes) {
                return $.map(villes, function (ville) {
                    return {
                        value: ville.Nom
                    };
                });
            }
        }
    });
    villes.initialize();
    $('#ville').typeahead(null, {
        hint: true,
        minLength: 1,
        displayKey: 'value',
        source: villes.ttAdapter()
    });
    $('.tt-hint').removeAttr("data-val");
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
